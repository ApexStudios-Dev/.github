on:
    workflow_call:
        inputs:
            java_version:
                type: string
                default: 17
            java_vendor:
                type: string
                default: temurin
        secrets:
            MAVEN_USERNAME:
                required: true
            MAVEN_PASSWORD:
                required: true
            CURSEFORGE_TOKEN:
                required: true
#            MODRINTH_TOKEN:
#                required: true
            DISCORD_WEBHOOK_URL:
                required: true

jobs:
    vars:
        name: Get Variables
        runs-on: apexstudios
        outputs:
            version: ${{ steps.version.outputs.version }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
                fetch-tags: true

            - name: Determine version
              uses: paulhatch/semantic-version@v5.4.0
              id: version
              with:
                change_path: "./"
                version_format: "${major}.${minor}.${patch}"
                search_commit_body: true
                bump_each_commit: true

    test:
        name: Test - ${{ needs.vars.outputs.version }}
        needs: [ vars ]
        runs-on: apexstudios
        env:
            VERSION: ${{ needs.vars.outputs.version }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Java
              uses: actions/setup-java@v4
              with:
                  distribution: ${{ inputs.java_vendor }}
                  java-version: ${{ inputs.java_version }}

            - name: Setup Gradle
              uses: gradle/actions/setup-gradle@v4
              with:
                  cache-disabled: ${{ ! env.ACT }}

            - name: Mark Gradle as Executable
              run: chmod +x ./gradlew

            - name: Test
              run: ./gradlew :immaculateCheck

    publish:
        name: Publish - ${{ needs.vars.outputs.version }}
        needs: [ vars, test ]
        runs-on: apexstudios
        env:
            VERSION: ${{ needs.vars.outputs.version }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Java
              uses: actions/setup-java@v4
              with:
                  distribution: ${{ inputs.java_vendor }}
                  java-version: ${{ inputs.java_version }}

            - name: Setup Gradle
              uses: gradle/actions/setup-gradle@v4
              with:
                  cache-disabled: ${{ ! env.ACT }}

            - name: Mark Gradle as Executable
              run: chmod +x ./gradlew

            - name: Publish
              if: ${{ ! env.ACT }}
              run: ./gradlew :publish :publishMods
              env:
                  MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
                  MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
                  CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}
#                  MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
                  DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
